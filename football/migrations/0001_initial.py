# Generated by Django 5.2 on 2025-05-21 19:10

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Country Name')),
                ('country_code', models.CharField(blank=True, max_length=3, null=True, verbose_name='Country Code')),
                ('flag', models.URLField(blank=True, null=True, verbose_name='Country Flag URL')),
            ],
            options={
                'verbose_name': 'Country',
                'verbose_name_plural': 'Countries',
                'ordering': ['name'],
                'indexes': [models.Index(fields=['name'], name='football_co_name_613bb5_idx')],
            },
        ),
        migrations.CreateModel(
            name='League',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='League Name')),
                ('logo', models.URLField(blank=True, null=True, verbose_name='League Logo URL')),
                ('type', models.CharField(blank=True, max_length=50)),
                ('season', models.IntegerField()),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leagues', to='football.country')),
            ],
            options={
                'verbose_name': 'League',
                'verbose_name_plural': 'Leagues',
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(db_index=True, max_length=100, verbose_name='Team Name')),
                ('short_name', models.CharField(blank=True, max_length=20)),
                ('logo', models.URLField(blank=True, null=True, verbose_name='Team Logo URL')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='teams', to='football.country')),
            ],
            options={
                'verbose_name': 'Team',
                'verbose_name_plural': 'Teams',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='LeagueTableSnapshot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('season', models.IntegerField()),
                ('round_name', models.CharField(blank=True, max_length=50, null=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('rank', models.PositiveSmallIntegerField()),
                ('points', models.PositiveSmallIntegerField()),
                ('goals_for', models.PositiveSmallIntegerField()),
                ('goals_against', models.PositiveSmallIntegerField()),
                ('goal_difference', models.IntegerField()),
                ('matches_played', models.PositiveSmallIntegerField()),
                ('wins', models.PositiveSmallIntegerField()),
                ('draws', models.PositiveSmallIntegerField()),
                ('losses', models.PositiveSmallIntegerField()),
                ('last_five', models.CharField(blank=True, max_length=50, null=True)),
                ('home_stat', models.JSONField(blank=True, default=dict, null=True)),
                ('away_stat', models.JSONField(blank=True, default=dict, null=True)),
                ('league', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tables', to='football.league')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='league_table_snapshots', to='football.team')),
            ],
            options={
                'verbose_name': 'League Table Snapshot',
                'verbose_name_plural': 'League Table Snapshots',
            },
        ),
        migrations.CreateModel(
            name='Fixture',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('date', models.DateTimeField(db_index=True)),
                ('referee', models.CharField(blank=True, max_length=100, null=True)),
                ('venue', models.CharField(blank=True, max_length=100, null=True)),
                ('status', models.CharField(choices=[('TBD', 'Time to be defined'), ('NS', 'Not started'), ('1H', 'First half'), ('HT', 'Halftime'), ('2H', 'Second half'), ('ET', 'Extra time'), ('P', 'Penalty in progress'), ('FT', 'Full time'), ('AET', 'After extra time'), ('PEN', 'Penalty shootout'), ('SUSP', 'Suspended'), ('INT', 'Interrupted'), ('PST', 'Postponed'), ('CANC', 'Cancelled'), ('ABD', 'Abandoned'), ('AWD', 'Awarded'), ('WO', 'WalkOver'), ('LIVE', 'Live')], default='NS', max_length=50)),
                ('head_to_head_snapshot', models.JSONField(blank=True, default=dict, null=True)),
                ('snapshot_processed', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('league', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fixtures', to='football.league')),
                ('away_team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='away_fixtures', to='football.team')),
                ('home_team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='home_fixtures', to='football.team')),
            ],
            options={
                'verbose_name': 'Fixture',
                'verbose_name_plural': 'Fixtures',
                'ordering': ['date'],
            },
        ),
        migrations.CreateModel(
            name='TeamFormSnapshot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('season', models.PositiveSmallIntegerField()),
                ('fixture_id', models.BigIntegerField(unique=True)),
                ('match_date', models.DateField(db_index=True)),
                ('is_home', models.BooleanField()),
                ('goals_for', models.PositiveSmallIntegerField()),
                ('goals_against', models.PositiveSmallIntegerField()),
                ('result', models.CharField(blank=True, choices=[('W', 'Win'), ('L', 'Loss'), ('D', 'Draw')], max_length=1, null=True)),
                ('matchday', models.PositiveSmallIntegerField()),
                ('league', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='football.league')),
                ('opponent_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='opponent_snapshots', to='football.team')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='form_snapshots', to='football.team')),
            ],
        ),
        migrations.AddConstraint(
            model_name='league',
            constraint=models.UniqueConstraint(fields=('name', 'season', 'country'), name='unique_league_season'),
        ),
        migrations.AddIndex(
            model_name='leaguetablesnapshot',
            index=models.Index(fields=['league'], name='football_le_league__fe6719_idx'),
        ),
        migrations.AddIndex(
            model_name='leaguetablesnapshot',
            index=models.Index(fields=['season'], name='football_le_season_c10dfb_idx'),
        ),
        migrations.AddConstraint(
            model_name='leaguetablesnapshot',
            constraint=models.UniqueConstraint(fields=('league', 'season', 'team'), name='unique_league_table_snapshot'),
        ),
        migrations.AddIndex(
            model_name='fixture',
            index=models.Index(fields=['date'], name='football_fi_date_5f5c36_idx'),
        ),
        migrations.AddIndex(
            model_name='fixture',
            index=models.Index(fields=['home_team', 'away_team'], name='football_fi_home_te_755921_idx'),
        ),
        migrations.AddIndex(
            model_name='fixture',
            index=models.Index(fields=['status'], name='football_fi_status_1d0384_idx'),
        ),
        migrations.AddIndex(
            model_name='teamformsnapshot',
            index=models.Index(fields=['team', 'season'], name='football_te_team_id_214a09_idx'),
        ),
        migrations.AddIndex(
            model_name='teamformsnapshot',
            index=models.Index(fields=['match_date'], name='football_te_match_d_50cac0_idx'),
        ),
        migrations.AddConstraint(
            model_name='teamformsnapshot',
            constraint=models.UniqueConstraint(fields=('team', 'fixture_id'), name='unique_team_form_snapshot'),
        ),
    ]
